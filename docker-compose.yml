services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskmanager_app
    restart: unless-stopped
    working_dir: /var/www
    env_file:
      - .env
    volumes:
      - .:/var/www
      - /var/www/vendor
    networks:
      - taskmanager

  nginx:
    image: nginx:1.25-alpine
    container_name: taskmanager_nginx
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - taskmanager

  mysql:
    image: mysql:8.0
    container_name: taskmanager_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - taskmanager

  redis:
    image: redis:7-alpine
    container_name: taskmanager_redis
    restart: unless-stopped
    networks:
      - taskmanager

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskmanager_worker
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3
    depends_on:
      - app
      - redis
    networks:
      - taskmanager

networks:
  taskmanager:
    driver: bridge

volumes:
  db_data:
    driver: local
  setup_flag:
    driver: local